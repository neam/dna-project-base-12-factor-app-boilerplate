
    index index.php;
    
    # for CORS requests
    map $http_origin $allow_origin {
      default "";
      "~^https?://(?:[^/]*\.)?(localhost|_PROJECT_\.com)(?::[0-9]+)?$" "$http_origin";
    }

    map $request_method $cors_method {
      default "allowed";
      "OPTIONS" "preflight";
    }

    map $cors_method $cors_max_age {
      default "";
      "preflight" 1728000;
    }

    map $cors_method $cors_allow_methods {
      default "";
      "preflight" "GET, POST, PUT, DELETE";
    }

    map $cors_method $cors_allow_headers {
      default "";
      "preflight" "Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Data-Profile";
    }

    map $cors_method $cors_content_length {
      default $initial_content_length;
      "preflight" 0;
    }

    map $cors_method $cors_content_type {
      default $initial_content_type;
      "preflight" "text/plain charset=UTF-8";
    }

    server {
        server_name localhost;
        listen 80;

        #Specify a charset
        charset utf-8;

        
        # Framework-specific config
                
        root /app/external-apis/health-checks;
        

        # Attempt the uri, uri+/, then fall back to yii's index.php with args included
        location / {
            try_files $uri $uri/ /index.php?$args;
        }

        # Prevent access to yii protected directories
        location ~ ^/(protected|framework|themes/\w+/views) {
            deny  all;
        }

        location ~ \.(hh|php) {
            include fastcgi_params;
            fastcgi_buffers 256 4k;
            fastcgi_param SCRIPT_FILENAME $request_filename;
            fastcgi_param HTTPS $proxied_https;
            
            # for hhvm
            fastcgi_keep_conn on;
            fastcgi_param NGINX_SCRIPT_NAME $fastcgi_script_name;
            fastcgi_param NGINX_DOCUMENT_ROOT $document_root;

            fastcgi_pass phpha;
        }



        location /api/ {
        
        
            alias /app/external-apis/rest-api/www/;

            # CORS response headers
            add_header Access-Control-Allow-Origin $allow_origin;
            add_header Access-Control-Allow-Credentials 'true';
            add_header Access-Control-Max-Age $cors_max_age;
            add_header Access-Control-Allow-Methods $cors_allow_methods;
            add_header Access-Control-Allow-Headers $cors_allow_headers;

            set $initial_content_length $sent_http_content_length;
            add_header 'Content-Length' "";
            add_header 'Content-Length' $cors_content_length;

            set $initial_content_type $sent_http_content_type;
            add_header Content-Type "";
            add_header Content-Type $cors_content_type;

            if ($request_method = 'OPTIONS') {
              return 204;
            }

            # serve static files direct + allow friendly urls
            try_files $uri $uri/ /api//api/index.php?$args;

            # Prevent access to yii protected directories
            location ~ ^/api/(protected|framework|themes/\w+/views) {
                deny  all;
            }
        

            location ~ /api/.+\.(hh|php)$ {
                include fastcgi_params;
                fastcgi_buffers 256 4k;
                fastcgi_param SCRIPT_FILENAME $request_filename;
                fastcgi_param HTTPS $proxied_https;
                
                # for hhvm
                fastcgi_keep_conn on;
                fastcgi_param NGINX_SCRIPT_NAME $fastcgi_script_name;
                fastcgi_param NGINX_DOCUMENT_ROOT $document_root;
                
                fastcgi_pass phpha;
            }
        
            include /app/stack/nginx/include/location-defaults.conf;
        
        } # / location

        # support accessing the location without a trailing slash
        location /api {
                rewrite ^(.*[^/])$ $1/ permanent;
        }

        
        include /app/stack/nginx/include/location-defaults.conf;
        
    }
